#!/usr/bin/python
# Copyright (c) 2020, 2024 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.
# GENERATED FILE - DO NOT EDIT - MANUAL CHANGES WILL BE OVERWRITTEN


from __future__ import absolute_import, division, print_function

__metaclass__ = type

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "community",
}

DOCUMENTATION = """
---
module: oci_cloud_migrations_migration_asset_facts
short_description: Fetches details about one or multiple MigrationAsset resources in Oracle Cloud Infrastructure
description:
    - Fetches details about one or multiple MigrationAsset resources in Oracle Cloud Infrastructure
    - Returns a list of migration assets.
    - If I(migration_asset_id) is specified, the details of a single MigrationAsset will be returned.
version_added: "2.9.0"
author: Oracle (@oracle)
options:
    migration_id:
        description:
            - Unique migration identifier
        type: str
    display_name:
        description:
            - A filter to return only resources that match the entire given display name.
        type: str
        aliases: ["name"]
    migration_asset_id:
        description:
            - Unique migration asset identifier
            - Required to get a specific migration_asset.
        type: str
        aliases: ["id"]
    lifecycle_state:
        description:
            - The current state of the migration asset.
        type: str
        choices:
            - "CREATING"
            - "UPDATING"
            - "NEEDS_ATTENTION"
            - "ACTIVE"
            - "DELETING"
            - "DELETED"
            - "FAILED"
    sort_order:
        description:
            - The sort order to use, either 'ASC' or 'DESC'.
        type: str
        choices:
            - "ASC"
            - "DESC"
    sort_by:
        description:
            - The field to sort by. Only one sort order can be provided. The default order for 'timeCreated' is descending. The default order for 'displayName'
              is ascending.
        type: str
        choices:
            - "timeCreated"
            - "displayName"
extends_documentation_fragment: [ oracle.oci.oracle ]
"""

EXAMPLES = """
- name: Get a specific migration_asset
  oci_cloud_migrations_migration_asset_facts:
    # required
    migration_asset_id: "ocid1.migrationasset.oc1..xxxxxxEXAMPLExxxxxx"

- name: List migration_assets
  oci_cloud_migrations_migration_asset_facts:

    # optional
    migration_id: "ocid1.migration.oc1..xxxxxxEXAMPLExxxxxx"
    display_name: display_name_example
    migration_asset_id: "ocid1.migrationasset.oc1..xxxxxxEXAMPLExxxxxx"
    lifecycle_state: CREATING
    sort_order: ASC
    sort_by: timeCreated

"""

RETURN = """
migration_assets:
    description:
        - List of MigrationAsset resources
    returned: on success
    type: complex
    contains:
        availability_domain:
            description:
                - Availability domain
                - Returned for get operation
            returned: on success
            type: str
            sample: Uocm:PHX-AD-1
        replication_compartment_id:
            description:
                - Replication compartment identifier
                - Returned for get operation
            returned: on success
            type: str
            sample: "ocid1.replicationcompartment.oc1..xxxxxxEXAMPLExxxxxx"
        snap_shot_bucket_name:
            description:
                - Name of snapshot bucket
                - Returned for get operation
            returned: on success
            type: str
            sample: snap_shot_bucket_name_example
        id:
            description:
                - Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
            returned: on success
            type: str
            sample: "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx"
        type:
            description:
                - The type of asset referenced for inventory.
            returned: on success
            type: str
            sample: type_example
        display_name:
            description:
                - A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
            returned: on success
            type: str
            sample: display_name_example
        compartment_id:
            description:
                - Compartment Identifier
            returned: on success
            type: str
            sample: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
        lifecycle_state:
            description:
                - The current state of the migration asset.
            returned: on success
            type: str
            sample: CREATING
        lifecycle_details:
            description:
                - A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed
                  state.
            returned: on success
            type: str
            sample: lifecycle_details_example
        time_created:
            description:
                - The time when the migration asset was created. An RFC3339 formatted datetime string.
            returned: on success
            type: str
            sample: "2013-10-20T19:20:30+01:00"
        time_updated:
            description:
                - The time when the migration asset was updated. An RFC3339 formatted datetime string.
            returned: on success
            type: str
            sample: "2013-10-20T19:20:30+01:00"
        migration_id:
            description:
                - OCID of the associated migration.
            returned: on success
            type: str
            sample: "ocid1.migration.oc1..xxxxxxEXAMPLExxxxxx"
        snapshots:
            description:
                - "Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots.
                  Example: `{\\"bar-key\\": \\"value\\"}`"
            returned: on success
            type: complex
            contains:
                uuid:
                    description:
                        - ID of the vCenter disk obtained from Inventory.
                    returned: on success
                    type: str
                    sample: uuid_example
                volume_id:
                    description:
                        - ID of the hydration server volume
                    returned: on success
                    type: str
                    sample: "ocid1.volume.oc1..xxxxxxEXAMPLExxxxxx"
                volume_type:
                    description:
                        - The hydration server volume type
                    returned: on success
                    type: str
                    sample: BOOT
                unmodified_volume_id:
                    description:
                        - ID of the unmodified volume
                    returned: on success
                    type: str
                    sample: "ocid1.unmodifiedvolume.oc1..xxxxxxEXAMPLExxxxxx"
        parent_snapshot:
            description:
                - The parent snapshot of the migration asset to be used by the replication task.
            returned: on success
            type: str
            sample: parent_snapshot_example
        snapshot_info:
            description:
                - The snapshot information.
                - Returned for list operation
            returned: on success
            type: str
            sample: snapshot_info_example
        source_asset_data:
            description:
                - "Key-value pair representing asset metadata keys and values scoped to a namespace.
                  Example: `{\\"bar-key\\": \\"value\\"}`"
            returned: on success
            type: dict
            sample: {}
        notifications:
            description:
                - List of notifications
            returned: on success
            type: list
            sample: []
        source_asset_id:
            description:
                - OCID that is referenced to an asset for an inventory.
            returned: on success
            type: str
            sample: "ocid1.sourceasset.oc1..xxxxxxEXAMPLExxxxxx"
        depended_on_by:
            description:
                - List of migration assets that depend on the asset.
            returned: on success
            type: list
            sample: []
        depends_on:
            description:
                - List of migration assets that depends on the asset.
            returned: on success
            type: list
            sample: []
        replication_schedule_id:
            description:
                - Replication schedule identifier
            returned: on success
            type: str
            sample: "ocid1.replicationschedule.oc1..xxxxxxEXAMPLExxxxxx"
        tenancy_id:
            description:
                - Tenancy identifier
            returned: on success
            type: str
            sample: "ocid1.tenancy.oc1..xxxxxxEXAMPLExxxxxx"
    sample: [{
        "availability_domain": "Uocm:PHX-AD-1",
        "replication_compartment_id": "ocid1.replicationcompartment.oc1..xxxxxxEXAMPLExxxxxx",
        "snap_shot_bucket_name": "snap_shot_bucket_name_example",
        "id": "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx",
        "type": "type_example",
        "display_name": "display_name_example",
        "compartment_id": "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx",
        "lifecycle_state": "CREATING",
        "lifecycle_details": "lifecycle_details_example",
        "time_created": "2013-10-20T19:20:30+01:00",
        "time_updated": "2013-10-20T19:20:30+01:00",
        "migration_id": "ocid1.migration.oc1..xxxxxxEXAMPLExxxxxx",
        "snapshots": {
            "uuid": "uuid_example",
            "volume_id": "ocid1.volume.oc1..xxxxxxEXAMPLExxxxxx",
            "volume_type": "BOOT",
            "unmodified_volume_id": "ocid1.unmodifiedvolume.oc1..xxxxxxEXAMPLExxxxxx"
        },
        "parent_snapshot": "parent_snapshot_example",
        "snapshot_info": "snapshot_info_example",
        "source_asset_data": {},
        "notifications": [],
        "source_asset_id": "ocid1.sourceasset.oc1..xxxxxxEXAMPLExxxxxx",
        "depended_on_by": [],
        "depends_on": [],
        "replication_schedule_id": "ocid1.replicationschedule.oc1..xxxxxxEXAMPLExxxxxx",
        "tenancy_id": "ocid1.tenancy.oc1..xxxxxxEXAMPLExxxxxx"
    }]
"""

from ansible_collections.oracle.oci.plugins.module_utils import oci_common_utils
from ansible_collections.oracle.oci.plugins.module_utils.oci_resource_utils import (
    OCIResourceFactsHelperBase,
    get_custom_class,
    OCIAnsibleModule,
)

try:
    from oci.cloud_migrations import MigrationClient

    HAS_OCI_PY_SDK = True
except ImportError:
    HAS_OCI_PY_SDK = False


class MigrationAssetFactsHelperGen(OCIResourceFactsHelperBase):
    """Supported operations: get, list"""

    def get_required_params_for_get(self):
        return [
            "migration_asset_id",
        ]

    def get_required_params_for_list(self):
        return []

    def get_resource(self):
        return oci_common_utils.call_with_backoff(
            self.client.get_migration_asset,
            migration_asset_id=self.module.params.get("migration_asset_id"),
        )

    def list_resources(self):
        optional_list_method_params = [
            "migration_id",
            "display_name",
            "migration_asset_id",
            "lifecycle_state",
            "sort_order",
            "sort_by",
        ]
        optional_kwargs = dict(
            (param, self.module.params[param])
            for param in optional_list_method_params
            if self.module.params.get(param) is not None
        )
        return oci_common_utils.list_all_resources(
            self.client.list_migration_assets, **optional_kwargs
        )


MigrationAssetFactsHelperCustom = get_custom_class("MigrationAssetFactsHelperCustom")


class ResourceFactsHelper(
    MigrationAssetFactsHelperCustom, MigrationAssetFactsHelperGen
):
    pass


def main():
    module_args = oci_common_utils.get_common_arg_spec()
    module_args.update(
        dict(
            migration_id=dict(type="str"),
            display_name=dict(aliases=["name"], type="str"),
            migration_asset_id=dict(aliases=["id"], type="str"),
            lifecycle_state=dict(
                type="str",
                choices=[
                    "CREATING",
                    "UPDATING",
                    "NEEDS_ATTENTION",
                    "ACTIVE",
                    "DELETING",
                    "DELETED",
                    "FAILED",
                ],
            ),
            sort_order=dict(type="str", choices=["ASC", "DESC"]),
            sort_by=dict(type="str", choices=["timeCreated", "displayName"]),
        )
    )

    module = OCIAnsibleModule(argument_spec=module_args)

    if not HAS_OCI_PY_SDK:
        module.fail_json(msg="oci python sdk required for this module.")

    resource_facts_helper = ResourceFactsHelper(
        module=module,
        resource_type="migration_asset",
        service_client_class=MigrationClient,
        namespace="cloud_migrations",
    )

    result = []

    if resource_facts_helper.is_get():
        result = [resource_facts_helper.get()]
    elif resource_facts_helper.is_list():
        result = resource_facts_helper.list()
    else:
        resource_facts_helper.fail()

    module.exit_json(migration_assets=result)


if __name__ == "__main__":
    main()
