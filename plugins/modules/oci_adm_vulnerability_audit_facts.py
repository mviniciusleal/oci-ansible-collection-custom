#!/usr/bin/python
# Copyright (c) 2020, 2024 Oracle and/or its affiliates.
# This software is made available to you under the terms of the GPL 3.0 license or the Apache 2.0 license.
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Apache License v2.0
# See LICENSE.TXT for details.
# GENERATED FILE - DO NOT EDIT - MANUAL CHANGES WILL BE OVERWRITTEN


from __future__ import absolute_import, division, print_function

__metaclass__ = type

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "community",
}

DOCUMENTATION = """
---
module: oci_adm_vulnerability_audit_facts
short_description: Fetches details about one or multiple VulnerabilityAudit resources in Oracle Cloud Infrastructure
description:
    - Fetches details about one or multiple VulnerabilityAudit resources in Oracle Cloud Infrastructure
    - Returns a list of Vulnerability Audits based on the specified query parameters.
      At least one of id, compartmentId or knowledgeBaseId query parameter must be provided.
    - If I(vulnerability_audit_id) is specified, the details of a single VulnerabilityAudit will be returned.
version_added: "2.9.0"
author: Oracle (@oracle)
options:
    vulnerability_audit_id:
        description:
            - Unique Vulnerability Audit identifier path parameter.
            - Required to get a specific vulnerability_audit.
        type: str
        aliases: ["id"]
    compartment_id:
        description:
            - A filter to return only resources that belong to the specified compartment identifier.
        type: str
    knowledge_base_id:
        description:
            - A filter to return only Vulnerability Audits that were created against the specified knowledge base.
        type: str
    is_success:
        description:
            - A filter to return only successful or failed Vulnerability Audits.
        type: bool
    lifecycle_state:
        description:
            - A filter to return only Vulnerability Audits that match the specified lifecycleState.
        type: str
        choices:
            - "ACTIVE"
            - "CREATING"
            - "DELETED"
            - "DELETING"
            - "FAILED"
    sort_order:
        description:
            - The sort order to use, either 'ASC' or 'DESC'.
        type: str
        choices:
            - "ASC"
            - "DESC"
    sort_by:
        description:
            - "The field used to sort Vulnerability Audits. Only one sort order is allowed.
              Default order for _maxObservedCvssV2Score_ is **ascending**.
              Default order for _maxObservedCvssV3Score_ is **ascending**.
              Default order for _maxObservedCvssV2ScoreWithIgnored_ is **ascending**.
              Default order for _maxObservedCvssV3ScoreWithIgnored_ is **ascending**.
              Default order for _timeCreated_ is **descending**.
              Default order for _vulnerableArtifactsCount_ is **ascending**.
              Default order for _vulnerableArtifactsCountWithIgnored_ is **ascending**."
        type: str
        choices:
            - "maxObservedCvssV2Score"
            - "maxObservedCvssV3Score"
            - "timeCreated"
            - "vulnerableArtifactsCount"
            - "maxObservedCvssV2ScoreWithIgnored"
            - "maxObservedCvssV3ScoreWithIgnored"
            - "vulnerableArtifactsCountWithIgnored"
    display_name:
        description:
            - A filter to return only resources that match the entire display name given.
        type: str
        aliases: ["name"]
extends_documentation_fragment: [ oracle.oci.oracle ]
"""

EXAMPLES = """
- name: Get a specific vulnerability_audit
  oci_adm_vulnerability_audit_facts:
    # required
    vulnerability_audit_id: "ocid1.vulnerabilityaudit.oc1..xxxxxxEXAMPLExxxxxx"

- name: List vulnerability_audits
  oci_adm_vulnerability_audit_facts:

    # optional
    compartment_id: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
    knowledge_base_id: "ocid1.knowledgebase.oc1..xxxxxxEXAMPLExxxxxx"
    is_success: true
    lifecycle_state: ACTIVE
    sort_order: ASC
    sort_by: maxObservedCvssV2Score
    display_name: display_name_example

"""

RETURN = """
vulnerability_audits:
    description:
        - List of VulnerabilityAudit resources
    returned: on success
    type: complex
    contains:
        vulnerabilities:
            description:
                - List of vulnerabilities found in the Vulnerability Audit.
                - Returned for get operation
            returned: on success
            type: complex
            contains:
                id:
                    description:
                        - Unique vulnerability identifier, e.g. CVE-1999-0067.
                    returned: on success
                    type: str
                    sample: "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx"
                cvss_v2_score:
                    description:
                        - Common Vulnerability Scoring System (CVSS) Version 2.
                    returned: on success
                    type: float
                    sample: 3.4
                cvss_v3_score:
                    description:
                        - Common Vulnerability Scoring System (CVSS) Version 3.
                    returned: on success
                    type: float
                    sample: 3.4
                is_ignored:
                    description:
                        - Indicates if the vulnerability was ignored according to the audit configuration.
                    returned: on success
                    type: bool
                    sample: true
        configuration:
            description:
                - ""
                - Returned for get operation
            returned: on success
            type: complex
            contains:
                max_permissible_cvss_v2_score:
                    description:
                        - A vulnerable Application Dependency is ignored if the score of its associated Vulnerability is below maxPermissibleCvssV2Score and
                          below maxPermissibleCvssV3Score.
                    returned: on success
                    type: float
                    sample: 3.4
                max_permissible_cvss_v3_score:
                    description:
                        - A vulnerable Application Dependency is ignored if the score of its associated Vulnerability is below maxPermissibleCvssV2Score and
                          below maxPermissibleCvssV3Score.
                    returned: on success
                    type: float
                    sample: 3.4
                exclusions:
                    description:
                        - A vulnerable Application Dependency is ignored if its name matches any of the items in `exclusions`.
                    returned: on success
                    type: list
                    sample: []
        source:
            description:
                - ""
                - Returned for get operation
            returned: on success
            type: complex
            contains:
                description:
                    description:
                        - Description of the external resource source.
                    returned: on success
                    type: str
                    sample: description_example
                oci_resource_id:
                    description:
                        - The Oracle Cloud identifier (L(OCID,https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the OCI resource that
                          triggered the Vulnerability Audit.
                    returned: on success
                    type: str
                    sample: "ocid1.ociresource.oc1..xxxxxxEXAMPLExxxxxx"
                type:
                    description:
                        - Source type of the Vulnerability Audit.
                    returned: on success
                    type: str
                    sample: EXTERNAL_RESOURCE
        id:
            description:
                - The Oracle Cloud identifier (L(OCID,https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the Vulnerability Audit.
            returned: on success
            type: str
            sample: "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx"
        display_name:
            description:
                - The name of the Vulnerability Audit.
            returned: on success
            type: str
            sample: display_name_example
        knowledge_base_id:
            description:
                - The Oracle Cloud identifier (L(OCID,https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
            returned: on success
            type: str
            sample: "ocid1.knowledgebase.oc1..xxxxxxEXAMPLExxxxxx"
        time_created:
            description:
                - The creation date and time of the Vulnerability Audit (formatted according to L(RFC3339,https://datatracker.ietf.org/doc/html/rfc3339)).
            returned: on success
            type: str
            sample: "2013-10-20T19:20:30+01:00"
        time_updated:
            description:
                - The update date and time of the Vulnerability Audit (formatted according to L(RFC3339,https://datatracker.ietf.org/doc/html/rfc3339)).
            returned: on success
            type: str
            sample: "2013-10-20T19:20:30+01:00"
        lifecycle_state:
            description:
                - The current lifecycle state of the Vulnerability Audit.
            returned: on success
            type: str
            sample: ACTIVE
        max_observed_cvss_v2_score:
            description:
                - Maximum Common Vulnerability Scoring System Version 2 score observed for non-ignored vulnerable Application Dependencies.
            returned: on success
            type: float
            sample: 3.4
        max_observed_cvss_v3_score:
            description:
                - Maximum Common Vulnerability Scoring System Version 3 score observed for non-ignored vulnerable Application Dependencies.
            returned: on success
            type: float
            sample: 3.4
        vulnerable_artifacts_count:
            description:
                - Count of non-ignored vulnerable Application Dependencies.
            returned: on success
            type: int
            sample: 56
        max_observed_cvss_v2_score_with_ignored:
            description:
                - Maximum Common Vulnerability Scoring System Version 2 score observed for vulnerable Application Dependencies including ignored ones.
            returned: on success
            type: float
            sample: 3.4
        max_observed_cvss_v3_score_with_ignored:
            description:
                - Maximum Common Vulnerability Scoring System Version 3 score observed for vulnerable Application Dependencies including ignored ones.
            returned: on success
            type: float
            sample: 3.4
        vulnerable_artifacts_count_with_ignored:
            description:
                - Count of all vulnerable Application Dependencies.
            returned: on success
            type: int
            sample: 56
        is_success:
            description:
                - Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
            returned: on success
            type: bool
            sample: true
        build_type:
            description:
                - The type of the build tool.
            returned: on success
            type: str
            sample: MAVEN
        compartment_id:
            description:
                - The Oracle Cloud identifier (L(OCID,https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the compartment associated
                  with the Vulnerability Audit.
            returned: on success
            type: str
            sample: "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx"
        freeform_tags:
            description:
                - "Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
                  Example: `{\\"bar-key\\": \\"value\\"}`"
            returned: on success
            type: dict
            sample: {'Department': 'Finance'}
        defined_tags:
            description:
                - "Defined tags for this resource. Each key is predefined and scoped to a namespace.
                  Example: `{\\"foo-namespace\\": {\\"bar-key\\": \\"value\\"}}`"
            returned: on success
            type: dict
            sample: {'Operations': {'CostCenter': 'US'}}
        system_tags:
            description:
                - "Usage of system tag keys. These predefined keys are scoped to namespaces.
                  Example: `{\\"orcl-cloud\\": {\\"free-tier-retained\\": \\"true\\"}}`"
            returned: on success
            type: dict
            sample: {}
    sample: [{
        "vulnerabilities": [{
            "id": "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx",
            "cvss_v2_score": 3.4,
            "cvss_v3_score": 3.4,
            "is_ignored": true
        }],
        "configuration": {
            "max_permissible_cvss_v2_score": 3.4,
            "max_permissible_cvss_v3_score": 3.4,
            "exclusions": []
        },
        "source": {
            "description": "description_example",
            "oci_resource_id": "ocid1.ociresource.oc1..xxxxxxEXAMPLExxxxxx",
            "type": "EXTERNAL_RESOURCE"
        },
        "id": "ocid1.resource.oc1..xxxxxxEXAMPLExxxxxx",
        "display_name": "display_name_example",
        "knowledge_base_id": "ocid1.knowledgebase.oc1..xxxxxxEXAMPLExxxxxx",
        "time_created": "2013-10-20T19:20:30+01:00",
        "time_updated": "2013-10-20T19:20:30+01:00",
        "lifecycle_state": "ACTIVE",
        "max_observed_cvss_v2_score": 3.4,
        "max_observed_cvss_v3_score": 3.4,
        "vulnerable_artifacts_count": 56,
        "max_observed_cvss_v2_score_with_ignored": 3.4,
        "max_observed_cvss_v3_score_with_ignored": 3.4,
        "vulnerable_artifacts_count_with_ignored": 56,
        "is_success": true,
        "build_type": "MAVEN",
        "compartment_id": "ocid1.compartment.oc1..xxxxxxEXAMPLExxxxxx",
        "freeform_tags": {'Department': 'Finance'},
        "defined_tags": {'Operations': {'CostCenter': 'US'}},
        "system_tags": {}
    }]
"""

from ansible_collections.oracle.oci.plugins.module_utils import oci_common_utils
from ansible_collections.oracle.oci.plugins.module_utils.oci_resource_utils import (
    OCIResourceFactsHelperBase,
    get_custom_class,
    OCIAnsibleModule,
)

try:
    from oci.adm import ApplicationDependencyManagementClient

    HAS_OCI_PY_SDK = True
except ImportError:
    HAS_OCI_PY_SDK = False


class VulnerabilityAuditFactsHelperGen(OCIResourceFactsHelperBase):
    """Supported operations: get, list"""

    def get_required_params_for_get(self):
        return [
            "vulnerability_audit_id",
        ]

    def get_required_params_for_list(self):
        return []

    def get_resource(self):
        return oci_common_utils.call_with_backoff(
            self.client.get_vulnerability_audit,
            vulnerability_audit_id=self.module.params.get("vulnerability_audit_id"),
        )

    def list_resources(self):
        optional_list_method_params = [
            "compartment_id",
            "knowledge_base_id",
            "is_success",
            "lifecycle_state",
            "sort_order",
            "sort_by",
            "display_name",
        ]
        optional_kwargs = dict(
            (param, self.module.params[param])
            for param in optional_list_method_params
            if self.module.params.get(param) is not None
        )
        return oci_common_utils.list_all_resources(
            self.client.list_vulnerability_audits, **optional_kwargs
        )


VulnerabilityAuditFactsHelperCustom = get_custom_class(
    "VulnerabilityAuditFactsHelperCustom"
)


class ResourceFactsHelper(
    VulnerabilityAuditFactsHelperCustom, VulnerabilityAuditFactsHelperGen
):
    pass


def main():
    module_args = oci_common_utils.get_common_arg_spec()
    module_args.update(
        dict(
            vulnerability_audit_id=dict(aliases=["id"], type="str"),
            compartment_id=dict(type="str"),
            knowledge_base_id=dict(type="str"),
            is_success=dict(type="bool"),
            lifecycle_state=dict(
                type="str",
                choices=["ACTIVE", "CREATING", "DELETED", "DELETING", "FAILED"],
            ),
            sort_order=dict(type="str", choices=["ASC", "DESC"]),
            sort_by=dict(
                type="str",
                choices=[
                    "maxObservedCvssV2Score",
                    "maxObservedCvssV3Score",
                    "timeCreated",
                    "vulnerableArtifactsCount",
                    "maxObservedCvssV2ScoreWithIgnored",
                    "maxObservedCvssV3ScoreWithIgnored",
                    "vulnerableArtifactsCountWithIgnored",
                ],
            ),
            display_name=dict(aliases=["name"], type="str"),
        )
    )

    module = OCIAnsibleModule(argument_spec=module_args)

    if not HAS_OCI_PY_SDK:
        module.fail_json(msg="oci python sdk required for this module.")

    resource_facts_helper = ResourceFactsHelper(
        module=module,
        resource_type="vulnerability_audit",
        service_client_class=ApplicationDependencyManagementClient,
        namespace="adm",
    )

    result = []

    if resource_facts_helper.is_get():
        result = [resource_facts_helper.get()]
    elif resource_facts_helper.is_list():
        result = resource_facts_helper.list()
    else:
        resource_facts_helper.fail()

    module.exit_json(vulnerability_audits=result)


if __name__ == "__main__":
    main()
